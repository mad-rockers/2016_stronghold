// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef LAUNCHBALL_H
#define LAUNCHBALL_H


#include "Commands/Subsystem.h"
#include "../Robot.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class LaunchBall: public Command {
public:
	bool hasLooped;
	bool isFinished;
	bool findnoise;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	LaunchBall();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

	virtual void Initialize(){
		hasLooped = 0;
		isFinished = 0;
		findnoise = 0;
	}
	virtual void Execute(){
		Robot::catapult->setMotor(.7);//forward is positive
		if(hasLooped == 0 && Robot::catapult->getlimit()== 0){ //if limit switch, then ==0 if IR sensor, then ==0
			hasLooped = 1;
		}
		if (Robot::catapult->getlimit()== 1){
			findnoise=1;
		}
		SmartDashboard::PutBoolean("noise on switch",findnoise);

	}
	virtual bool IsFinished(){
		if (hasLooped == 1 && Robot::catapult->getlimit()== 1){//opposite of above
			isFinished = 1;
		}
		return isFinished;
	}
	virtual void End(){
		Robot::catapult->setMotor(0);
	}
	virtual void Interrupted();

private:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLES
};

#endif
